/////////////////////////////////////////////////////////////////
//
// TO DO as of 25 MAY --23,21,16 MAY 2014--
//
//  - revisit alias separator ("name := path/name" vs "path/name => name")
//  - revisit global alias ({name} := path/name vs not supporting it)
//  - revisit or punt on deep aliasing for mocks (like rewire)
//
//  - better declaration and handle for main and parentNode
//    e.g.,  main.parentNode.appendChild(s);
//
//  - add namespace.error(fn(err){ show error and shut down});
//
//  - string constants for normalize()
//  - move normalize into Module._resolveFilename???
//
//  - rename "monad" to "loader"
//  - rename exec to "load"
//  - rename string to "include"
//  - rename make to "sandbox"
//
//  - content-security-policy no-eval version of exec/make/sandbox
//  - three-star comments for function body (won't work with csp no-eval)
//  - better build.js for the above
//  - webpagetest for the above
//
//  - gulp build with jshint, concat, uglify
//  - gulp-convert-common-to-xyz
//
//  - revisit nested defs - anon vs named
//  - revisit top-level unqualified names ("module" vs "./module")
//  - revisit extensibility or reuse of given name vs draconian no-ext option
//
//  - enable var namespace = require('namespace');
//    + expose ns.load, ns.include, ns.alias??
//
//  - slightly more capable global.require() ???
//  - enable require('namespace')(__filename)(dependencyId)(function () {});
//    + sugar it as define(__filename)(dependencyId)(function () {});
//
//  - support script-reload (or get rid of img cache)
//
//  - verify legacy browser support (trim, get rid of should.js for IE8, etc.)
//
//  - DONE (via namespace() member methods) 
//          encapsulate related methods into units, then expose the units
//  - DONE move exec, string, and make to namespace.exec, namespace.string, 
            namespace.make
//  - DONE fix basepath on file:// protocol
//  - DONE put camelize on namespace.camelize
//  - DONE put graph on namespace.graph
//  - DONE expose namespace as define.namespace??
//  - DONE get rid of global state vars (main, scripts, script, etc.)
//  - DONE strategy pattern for implementations of needed methods
//  - DONE de-couple script.request from exec, use request.onload(err, done)
//  - DONE browser global.require - BUT MODULE MUST BE CACHEd, no remote request
//  - DONE add context member to monad (move keys from monad to context)
//  - DONE get rid of state vars (registry, stack)
//  - DONE move stack to exec.stack
//  - DONE move registry to define.cache
//  - DONE require() & module.require() (with tests)
//  - DONE normalize() on file:// protocol
//  - DONE zero in on the failed to load async deps properly (clobbering?)
//    + localhost + testem
//    + rawgithub
//
/////////////////////////////////////////////////////////////////